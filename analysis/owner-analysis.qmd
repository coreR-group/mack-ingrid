---
title: "Owner Analysis"
format: html
author: "Mack White"
---

# **Exercise**: Explore, Clean, and Wrangle Data

## Setup
```{r}
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
```

## Read in data and check out
```{r}
lobster_abundance <- read_csv("../data/Lobster_Abundance_All_Years_20220829.csv")
#glimpse(lobster_abundance)
```

## Convert missing values using `mutate()` and `na_if()`
```{r}
lobster_abundance <- lobster_abundance %>% 
  mutate(SIZE_MM = na_if(SIZE_MM, -99999))
# unique(lobster_abundance$SIZE_MM)
# View(lobster_abundance)
```

## `filter()` practice
```{r}
#unique(lobster_abundance$SITE) - five sites, including NAPL
not_napl <- lobster_abundance %>% 
  filter(SITE != "NAPL")
#unique(not_napl$SITE) - removed "NAPL" from dataset
```

```{r}
aque_70mm <- not_napl %>% 
  filter(SITE == "AQUE", SIZE_MM > 70)
# glimpse(aque_70mm)
# unique(aque_70mm$SITE)
# range(aque_70mm$SIZE_MM) - looks like we have filtered for site "AQUE" and >70 mm carapace length succesfully
```

# Create visually appealing and informative data visualization

## Create a multi-panel plot of lobster carapace length (SIZE_MM) using `ggplot()`, `geom_histogram()`, and `facet_wrap()`. Use the variable SITE in `facet_wrap()`. Use the object lobster_abundance.
```{r}
ggplot(data = lobster_abundance,
       aes(x = SIZE_MM)) +
  geom_histogram() +
  facet_wrap(~SITE) + 
  labs(x = "Carapace Length (mm)",
       y = "Number Observed",
       title = "Size Frequency Distributions of Spiny Lobsters: SBC-LTER") +
  theme(panel.grid.major = element_blank(), 
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"),
        plot.title = element_text(hjust = 0.5, size=14, face="bold", color = "black"),
        # axis.text = element_text(size=12,face="bold", color = "black"),
        axis.title = element_text(size=12,face="bold", color = "black"),
        axis.text.x = element_text(angle = 45, hjust = 1., vjust = 1.1, face = "bold"),axis.text = element_text(color="black"),
        panel.grid.minor = element_blank(),legend.position = "none") + 
  scale_x_continuous(breaks = seq(0, 175, 25))

## saving plot
ggsave("../figs/size_freq_histo_abundance.png",
       width = 12,
       height = 12,
       units = "in")
```

## Create a line graph of the number of total lobsters observed (y-axis) by year (x-axis) in the study, grouped by SITE.
```{r}
lobsters_summarize <- lobster_abundance %>% 
  group_by(SITE, YEAR) %>% 
  summarize(COUNT = n())

# looks good!
```

### Next, create a line graph using `ggplot()` and `geom_line()`. Use `geom_point()` to make the data points more distinct, but ultimately up to you if you want to use it or not. We also want SITE information on this graph, do this by specifying the variable in the color argument. Where should the color argument go? Inside or outside of `aes()`? Why or why not?
```{r}
ggplot(data = lobsters_summarize,
       aes(x = YEAR, 
           y = COUNT)) +
  geom_point(aes(color = SITE)) +
  geom_line(aes(color = SITE)) +
  labs(x = "Year",
       y = "Number Observed",
       title = "Lobster Abundance (2012-2022): SBC-LTER") +
  theme(panel.grid.major = element_blank(), 
        # panel.background = element_blank(),
        # axis.line = element_line(colour = "black"),
        # plot.title = element_text(hjust = 0.5, size=14, face="bold", color = "black"),
        # axis.text = element_text(size=12,face="bold", color = "black"),
        # axis.title = element_text(size=12,face="bold", color = "black"),
        # axis.text.x = element_text(angle = 45, hjust = 1., vjust = 1.1, face = "bold"),axis.text = element_text(color="black"),
        panel.grid.minor = element_blank(),legend.position = "none") #+ 
  #scale_x_continuous(breaks = seq(0, 175, 25))

## saving plot
ggsave("../figs/abundance_linegraph_by_year.png",
       width = 14,
       height = 7,
       units = "in")

# # year is showing up super funky, so going to reclassify as a factor
# # glimpse(lobsters_summarize)
# lobsters_summarize <-  lobsters_summarize %>% 
#   mutate(YEAR = as.character(YEAR))
# 
# ggplot(data = lobsters_summarize,
#        aes(x = YEAR, 
#            y = COUNT)) +
#   geom_point(aes(color = SITE)) +
#   geom_line(aes(color = SITE))
# 
# #ended up losing information necessary to generate line graph?
# # more trouble than help so commenting out and sticking with OG figure
```

## Create a bar graph that shows the amount of small and large sized carapace lobsters at each SITE from 2019-2021. Note: The small and large metrics are completely made up and are not based on any known facts
```{r}
# First, youâ€™ll need to create a new dataset subset called lobster_size_lrg:
lobster_size_lrg <- lobster_abundance %>% 
  filter(YEAR %in% c("2019", "2020", "2021")) %>% 
  mutate(SIZE_BIN = if_else(condition = SIZE_MM <= 70,
                            true = "small",
                            false = "large")) %>% 
  group_by(SITE, SIZE_BIN) %>% 
  summarize(COUNT = n()) %>% 
  drop_na()

# Next, create a bar graph using ggplot() and geom_bar(). Note that geom_bar() automatically creates a stacked bar chart. Try using the argument position = "dodge" to make the bars side by side. Pick which bar position you like best.

# plot without position = "dodge"
ggplot(data = lobster_size_lrg,
       aes(x = SITE,
           y = COUNT,
           fill = SIZE_BIN)) +
  geom_col()

# plot with position = "dodge"

ggplot(data = lobster_size_lrg,
       aes(x = SITE,
           y = COUNT,
           fill = SIZE_BIN)) +
  geom_col(position = "dodge") +
  labs(x = "Year",
       y = "Number Observed",
       title = "Lobster Abundance (2012-2022): SBC-LTER")
  # theme(panel.grid.major = element_blank(), 
        # panel.background = element_blank(),
        # axis.line = element_line(colour = "black"),
        # plot.title = element_text(hjust = 0.5, size=14, face="bold", color = "black"),
        # axis.text = element_text(size=12,face="bold", color = "black"),
        # axis.title = element_text(size=12,face="bold", color = "black"),
        # axis.text.x = element_text(angle = 45, hjust = 1., vjust = 1.1, face = "bold"),axis.text = element_text(color="black"),
        # panel.grid.minor = element_blank(),legend.position = "none") + 
  #scale_x_continuous(breaks = seq(0, 175, 25))

## saving plot
ggsave("../figs/abundance_size bin_bar.png",
       width = 14,
       height = 7,
       units = "in")
```

